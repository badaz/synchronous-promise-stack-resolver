{
  "name": "synchronous-promise-stack-resolver",
  "version": "0.0.1",
  "description": "Synchronously resolves promises using localForage (not tested) or react native's asyncStorage if needed and any kind of event dispatcher",
  "main": "dist/index.js",
  "scripts": {
    "clean": "rimraf dist",
    "test": "jest",
    "test:watch": "npm run test -- --watch",
    "build": "babel src --out-dir dist",
    "check:src": "npm run test",
    "prepublish": "npm run clean && npm run check:src && npm run build"
  },
  "author": "Sylvère Grégeois",
  "license": "MIT",
  "devDependencies": {
    "babel-cli": "^6.18.0",
    "babel-core": "^6.20.0",
    "babel-jest": "^17.0.2",
    "babel-plugin-transform-async-functions": "^6.8.0",
    "babel-polyfill": "^6.20.0",
    "babel-preset-es2015": "^6.18.0",
    "babel-preset-es2017": "^6.16.0",
    "babel-runtime": "^6.20.0",
    "jest": "^17.0.3",
    "rimraf": "^2.5.4"
  }
}
